<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.uni.share</groupId>
    <artifactId>share</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>


    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <properties>
        <java.version>1.8</java.version>
        <java.ee.version>8.0</java.ee.version>
        <java.persistance.version>2.2</java.persistance.version>
        <postgresql.version>42.1.2</postgresql.version>
        <mockito.verion>2.23.0</mockito.verion>
        <jersey.version>2.22.2</jersey.version>
        <jackson.version>2.9.8</jackson.version>
        <junit.version>4.12</junit.version>
        <assertj.version>3.11.1</assertj.version>
        <jacoco-maven-plugin.version>0.7.8</jacoco-maven-plugin.version>
        <!-- Only unit tests are run by default. -->
        <skip.unit.tests>false</skip.unit.tests>
        <skip.integration.tests>true</skip.integration.tests>
        <skip.scenario.tests>true</skip.scenario.tests>
        <maven-failsafe-plugin.version>2.22.1</maven-failsafe-plugin.version>


        <!-- Swagger Version -->
        <swagger.version>1.5.12</swagger.version>
        <!-- Flyway -->
        <flyway.version>4.2.0</flyway.version>
        <org.flywaydb.flyway-maven-plugin.version>5.2.4</org.flywaydb.flyway-maven-plugin.version>

        <!-- Database Configuration -->
        <database.url>jdbc:postgresql://localhost:5432/share</database.url>
        <database.user>share</database.user>
        <database.password>share</database.password>

        <!-- Dev Configuration -->
        <database_dev.url>jdbc:postgresql://35.198.72.59:5432/cryptshare</database_dev.url>
        <database_dev.user>cryptshare</database_dev.user>
        <database_dev.password>cryptshare</database_dev.password>

        <arquillian.database.url>jdbc:postgresql://localhost:15432/cryptshare-test-db</arquillian.database.url>
        <arquillian.database.user>cryptshare</arquillian.database.user>
        <arquillian.database.password>cryptshare</arquillian.database.password>

    </properties>

    <dependencies>
        <dependency>
            <groupId>org.zeromq</groupId>
            <artifactId>jeromq</artifactId>
            <version>0.4.3</version>
        </dependency>


        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-apt</artifactId>
            <version>4.0.6</version>
        </dependency>
        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-jpa</artifactId>
            <version>4.0.6</version>
        </dependency>


        <dependency>
            <groupId>com.github.iotaledger.iota-java</groupId>
            <artifactId>jota</artifactId>
            <classifier>jar-with-dependencies</classifier>
            <version>1.0.0-beta2</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>


        <!-- Flyway Postgres Driver -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>

        <!-- Java Persistence -->
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
            <version>${java.persistance.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-server -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-multipart -->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <!-- MAYBE FIX FOR CASTING LIST<STRING> MESSAGEBODYWRITER-->
        <!-- https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-json-jackson -->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/javax/javaee-api -->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>${java.ee.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/junit/junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.verion}</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.assertj/assertj-core -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- security TODO-->
        <dependency>
            <groupId>org.mindrot</groupId>
            <artifactId>jbcrypt</artifactId>
            <version>0.4</version>
        </dependency>

        <!-- JWT -->
        <!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>0.10.5</version>
            <scope>runtime</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>0.10.5</version>
        </dependency>


        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>0.10.5</version>
            <scope>runtime</scope>
        </dependency>

        <!-- commons -->
        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.8.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.swagger/swagger-jaxrs -->
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-jaxrs</artifactId>
            <version>${swagger.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-annotations -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>2.0.6</version>
        </dependency>

        <!-- GOOGLE CLOUD STORAGE -->
        <!-- https://mvnrepository.com/artifact/com.google.cloud/google-cloud-storage -->
        <dependency>
            <groupId>com.google.cloud</groupId>
            <artifactId>google-cloud-storage</artifactId>
            <version>1.71.0</version>
        </dependency>

        <!-- WRO 14.06.2018 Added microprofile to enable smart environment variables -->
        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-api</artifactId>
            <version>1.1</version>
            <scope>provided</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.rest-assured/rest-assured -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>3.1.0</version>
            <scope>test</scope>
        </dependency>


        <!-- https://mvnrepository.com/artifact/org.jboss.arquillian.junit/arquillian-junit-container -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <version>1.4.1.Final</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>fish.payara.extras</groupId>
            <artifactId>payara-embedded-all</artifactId>
            <version>4.1.2.181</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.eu.ingwar.tools</groupId>
            <artifactId>arquillian-suite-extension</artifactId>
            <version>1.2.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>fish.payara.arquillian</groupId>
            <artifactId>arquillian-payara-server-4-embedded</artifactId>
            <version>1.0.Beta3</version>
        </dependency>

        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>5.1.4</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.arquillian.ape</groupId>
            <artifactId>arquillian-ape-sql-container-dbunit</artifactId>
            <version>2.0.0-alpha.7</version>
            <scope>test</scope>
        </dependency>
        
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.4.1.Final</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <profiles>
        <profile>
            <id>dev</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.flywaydb</groupId>
                        <artifactId>flyway-maven-plugin</artifactId>
                        <configuration>
                            <url>${database_dev.url}</url>
                            <user>${database_dev.user}</user>
                            <password>${database_dev.password}</password>
                            <locations>
                                <location>filesystem:src/main/resources/db.migrations</location>
                            </locations>
                        </configuration>
                        <executions>
                            <execution>
                                <id>flyway-clean-database</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>clean</goal>
                                    <goal>migrate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <finalName>share-api</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${flyway.version}</version>
                <configuration>
                    <placeholderReplacement>false</placeholderReplacement>
                    <outOfOrder>true</outOfOrder>
                    <baselineOnMigrate>true</baselineOnMigrate>
                    <url>${database.url}</url>
                    <user>${database.user}</user>
                    <password>${database.password}</password>
                    <locations>
                        <location>filesystem:src/main/resources/db.migrations</location>
                    </locations>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.github.kongchen</groupId>
                <artifactId>swagger-maven-plugin</artifactId>
                <version>3.1.3</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <apiSources>
                        <apiSource>
                            <locations>com.uni.share</locations>
                            <schemes>http,https</schemes>
                            <basePath>/share-api/api</basePath>
                            <info>
                                <title>${project.artifactId}</title>
                                <version>${project.version}</version>
                            </info>
                            <attachSwaggerArtifact>false</attachSwaggerArtifact>

                            <swaggerDirectory>${project.build.directory}/${project.build.finalName}</swaggerDirectory>

                        </apiSource>
                    </apiSources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.mysema.maven</groupId>
                <artifactId>apt-maven-plugin</artifactId>
                <version>1.1.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/generated-sources/java</outputDirectory>
                            <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
                            <options>
                                <querydsl.unknownAsEmbeddable>true</querydsl.unknownAsEmbeddable>
                                <querydsl.excludedPackages></querydsl.excludedPackages>
                                <querydsl.excludedClasses></querydsl.excludedClasses>
                            </options>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Used for integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <!-- Ensures that both integration-test and verify goals of the Failsafe Maven plugin are executed. -->
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the VM argument line used when integration tests are run. -->
                            <argLine>${failsafeArgLine}</argLine>
                            <includes>
                                <include>**/integration/**/*.java</include>
                            </includes>
                            <!-- Skips integration tests if the value of skip.integration.tests property is true -->
                            <skipTests>${skip.integration.tests}</skipTests>
                            <systemProperties>
                                <arquillian.launch>glassfish-embedded</arquillian.launch>
                                <arquillian.database.user>${arquillian.database.user}</arquillian.database.user>
                                <arquillian.database.password>${arquillian.database.password}
                                </arquillian.database.password>
                                <arquillian.database.url>${arquillian.database.url}</arquillian.database.url>
                            </systemProperties>
                            <useSystemClassLoader>false</useSystemClassLoader>
                        </configuration>
                    </execution>
                    <!-- Ensures that both scenario-test and verify goals of the Failsafe Maven plugin are executed. -->
                    <execution>
                        <id>scenario-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the VM argument line used when integration tests are run. -->
                            <argLine>${failsafeArgLine}</argLine>
                            <includes>
                                <include>**/scenario/**/*.java</include>
                            </includes>
                            <!-- Skips integration tests if the value of skip.integration.tests property is true -->
                            <skipTests>${skip.scenario.tests}</skipTests>
                            <systemProperties>
                                <arquillian.launch>glassfish-embedded</arquillian.launch>
                                <arquillian.database.user>${arquillian.database.user}</arquillian.database.user>
                                <arquillian.database.password>${arquillian.database.password}
                                </arquillian.database.password>
                                <arquillian.database.url>${arquillian.database.url}</arquillian.database.url>
                            </systemProperties>
                            <useSystemClassLoader>false</useSystemClassLoader>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
    </build>
</project>